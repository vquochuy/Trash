apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
    jcenter()
    flatDir name: 'nonMaven', dirs: 'local_lib'
}
configurations {
	compile.exclude group: "javax.servlet", module: "servlet-api"
	compile.exclude group: "org.mortbay.jetty", module: "servlet-api"
	compile.exclude group: "org.mortbay.jetty", module: "servlet-api-2.5"
	compile.exclude group: "org.mortbay.jetty", module: "jetty-util5"
	compile.exclude group: "org.eclipse.jdt", module: "core"
	compile.exclude group: "eclipse", module: "jdtcore"
	compile.exclude group: "org.bouncycastle", module: "bcprov-jdk15"
	compile.exclude group: "org.slf4j", module: "slf4j-jdk14"
  all{
	  resolutionStrategy {
	    // force certain versions of dependencies (including transitive)
	    force ("ca.juliusdavies:not-yet-commons-ssl:0.3.11")
	    eachDependency { details ->
	               if (details.requested.name == 'stax-api') {
	                    details.useTarget "stax:stax-api:${staxApiVersion}"
							}
					else if (details.requested.name == 'ant') {
	                    details.useTarget "org.apache.ant:ant:${antVersion}"
	                    	}
	            	else if (details.requested.name == 'velocity'){
	            		details.useTarget "org.apache.velocity:velocity:${velocityVersion}"
	            		}
	            	else if(details.requested.name == 'oro'){
	            		details.useTarget "oro:oro:${oroVersion}"
	            		}
	            	else if(details.requested.name == 'slf4j-api'){
	            		details.useTarget "org.slf4j:slf4j-api:${slf4jVersion}"
	            		}
	  				}
	  				
	  		}
  }
}

dependencies {
	//Compile Libs
	compile ("org.springframework:spring-orm:${springframeworkVersion}")
	compile ("org.springframework:spring-test:${springframeworkVersion}")
	compile ("org.springframework:spring-context:${springframeworkVersion}")
	compile ("org.springframework:spring-web:${springframeworkVersion}")
	compile ("org.springframework:spring-context-support:${springframeworkVersion}")
	compile ("junit:junit:${junitVersion}")
	compile ("org.hibernate:hibernate-core:${hibernateCoreVersion}")
	compile ("axis:axis-ant:${axisAntVersion}")
   	compile ("org.apache.ws.commons.axiom:axiom-impl:${axiomVersion}")
   	compile ("axis:axis:${axisVersion}")
    compile ("org.apache.axis2:axis2-adb-codegen:${axis2Version}")
	compile ("org.apache.axis2:axis2-transport-http:${axis2Version}")
	compile ("backport-util-concurrent:backport-util-concurrent:${backportVersion}")
	//compile ("c3p0:c3p0:${c3p0Version}")
	compile ("org.codehaus.castor:castor-anttasks:${castorVersion}")
	compile ("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}") 
	compile ("commons-pool:commons-pool:${commonsPoolVersion}")
	compile ("commons-io:commons-io:${commonsIoVersion}")
	compile ("org.eclipse.jdt.core.compiler:ecj:${ecjVersion}")
	
	compile ("org.mockito:mockito-all:${mockitoVersion}")
	compile ("org.quartz-scheduler:quartz:${quartzVersion}")
	compile ("org.apache.rampart:rampart-core:${rampartVersion}")  {
        exclude group: 'bouncycastle'
        exclude group: 'org.bouncycastle'
        exclude group: 'org.apache.xalan'
        exclude group: 'org.apache.santuario', module: 'xmlsec'
    }
	compile ("org.apache.ws.commons:ws-commons-util:${wsCommonsUtilVersion}") 
	compile ("xmlbeans:xbean:${xbeanVersion}")
	compile ("org.apache.xmlrpc:xmlrpc-client:${xmlrpcClientVersion}")
	compile ("com.thoughtworks.xstream:xstream:${xstreamVersion}"){
		exclude group: 'xpp3'
	}
	compile ("com.fdsapi:fdsapi:${fdsapiVersion}")
	compile ("jasperreports:jasperreports:${jasperreportsVersion}"){
		exclude group: 'bouncycastle'
	}
	compile ("net.sourceforge.javacsv:javacsv:${javacsvVersion}")
	compile ("com.sun.xml.bind:jaxb-xjc:${jaxbXjcVersion}")
	compile ("javax.activation:activation:activationVersion")
	compile ("javax.mail:mail:${mailVersion}") 
	//compile ("org.apache.velocity:velocity:${velocityVersion}") 
	compile ("org.mortbay.jetty:jetty-client:${jettyVersion}")
	compile ("org.mortbay.jetty:jetty-java5-threadpool:${jettyVersion}")
	compile ("org.mortbay.jetty:jetty-management:${jettyVersion}")
	compile ("log4j:log4j:${log4jVersion}")
	compile ("emma:emma_ant:${emmaVersion}")
	compile ("emma:emma:${emmaVersion}")
	compile ("org.apache.tomcat:tomcat-catalina:${tomcatVersion}") 
	compile ("com.google.code.maven-play-plugin.org.apache.commons:commons-javaflow:${commonsJavaflowVersion}") 
	compile ("gnu.getopt:java-getopt:${getoptVersion}") 
	compile ("org.gnu.inet:libidn:${libidnVersion}") 
	compile ("org.jabsorb:jabsorb:${jabsorbVersion}")
	compile ("com.jamonapi:jamon:${jamonVersion}") 
	compile ("org.apache.axis:axis-jaxrpc:${jaxrpcVersion}") 
	compile ("javatar:javatar:${tarVersion}") 
	compile ("org.mortbay.jetty:start:${jettyVersion}") 
	compile ("javolution:javolution:${javolutionVersion}") 
	compile ("org.jgrapht:jgrapht-jdk1.5:${jgraptJDK15Version}") 
	compile ("javax.websocket:javax.websocket-api:${webSocketApiVersion}")
	compile ("org.opensaml:xmltooling:${xmltoolingVersion}")
	compile ("org.slf4j:slf4j-api:${slf4jVersion}")
	//Local libs
	compile (":ojdbc7") 
	compile (":qip-wss4j:${qipWss4jVersion}") 
	
	compile (":jconn3:${jconn3Version}") 
	
	
	//Runtime libs
	//runtime ("org.slf4j:slf4j-simple:${slf4jVersion}")
   	runtime ("annogen:annogen:${annogenVersion}")
   	runtime ("org.apache.avalon.logkit:avalon-logkit:${avalonLogkitVersion}")
   	runtime ("org.apache.axis2:axis2-soapmonitor-servlet:${axis2Version}")
	runtime ("org.apache.axis2:axis2-transport-local:${axis2Version}")
	runtime ("org.apache.axis2:axis2-transport-tcp:${axis2transportTcpVersion}")
	runtime ("org.bouncycastle:bctsp-jdk16:${bouncycastleVersion}")
	runtime ("bsf:bsf:${bsfVersion}")
	runtime ("cglib:cglib-nodep:${cglibNodepVersion}")
	runtime ("org.apache.axis2:mex-impl:${axis2MexImplVersion}")
	runtime ("ognl:ognl:${ognlVersion}")
	runtime ("org.slf4j:slf4j-log4j12:${slf4jVersion}")
	runtime ("stax:stax-api:${staxApiVersion}")
	runtime ("org.ogce:xpp3:${xpp3Version}")
	runtime ("net.sf.ehcache:ehcache:${ehcacheVersion}")
	runtime ("org.hibernate:hibernate-ehcache:${hibernateCoreVersion}")
	runtime ("com.sun.xml.bind:jaxb-impl:${jaxbImplVersion}")
	runtime ("org.apache.ws.jaxme:jaxmeapi:${jaxmeapiVersion}")
	runtime ("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
	runtime ("joda-time:joda-time:${jodaTimeVersion}")
	runtime ("javax.ws.rs:jsr311-api:${jsr311ApiVersion}")
	runtime ("dbunit:dbunit:${dbunitVersion}")
	runtime ("org.mortbay.jetty:jsp-2.1-jetty:${JspJettyVersion}") 
	runtime ("net.sourceforge.jtds:jtds:${jtdsVersion}")
	runtime ("org.apache.axis2:soapmonitor:${axis2SoapmonitorVersion}")
	runtime ("org.apache.tomcat:tomcat-juli:${tomcatVersion}") 
	runtime ("javax.transaction:jta:${jtaVersion}") 
	runtime ("org.apache.tomcat:tribes:${tribesVersion}") 
	runtime ("oro:oro:${jakartaOroVersion}") //replace name jakarta-oro
	runtime ("org.apache.axis:axis-saaj:${saajVersion}") 
	runtime ("com.yahoo.platform.yui:yuicompressor:${yuicompressorVersion}") 	
	
	//Local libs
	//runtime (":IPAddressValuator") 
	//runtime (":MinML2") 
	//runtime (":jabsorb-src:${jabsorbVersion}")
	//runtime (":yui-compressor-ant-task:${yuiCompressorAntTaskVersion}") 
}

task copyCompileLibs(type: Copy) {
    into "compileLibs" //build_lib
    from configurations.compile
  }
  
task copyRuntimeLibs(type: Copy) {
    into "runtimeLibs" //lib
    from configurations.runtime - configurations.compile 
  }

task cleanLibs(type: Delete) {
  	  print 'Cleaning libs...'
      delete fileTree(dir: "compileLibs")
      delete fileTree(dir: "runtimeLibs")
      def env = System.getenv()
      def userHome = env['GRADLE_USER_HOME']
      delete "C:\\Users\\vquochuy\\.gradle\\caches\\modules-2\\files-2.1"
  }
  
